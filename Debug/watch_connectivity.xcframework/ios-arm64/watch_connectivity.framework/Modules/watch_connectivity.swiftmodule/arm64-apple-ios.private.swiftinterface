// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-bare-slash-regex -module-name watch_connectivity
import Flutter
import Swift
import UIKit
import WatchConnectivity
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_exported import watch_connectivity
@objc @_hasMissingDesignatedInitializers public class SwiftWatchConnectivityPlugin : ObjectiveC.NSObject, Flutter.FlutterPlugin, WatchConnectivity.WCSessionDelegate {
  @objc public static func register(with registrar: any Flutter.FlutterPluginRegistrar)
  @objc public func handle(_ call: Flutter.FlutterMethodCall, result: @escaping Flutter.FlutterResult)
  @objc public func session(_ session: WatchConnectivity.WCSession, activationDidCompleteWith activationState: WatchConnectivity.WCSessionActivationState, error: (any Swift.Error)?)
  @objc public func sessionDidBecomeInactive(_ session: WatchConnectivity.WCSession)
  @objc public func sessionDidDeactivate(_ session: WatchConnectivity.WCSession)
  @objc public func session(_ session: WatchConnectivity.WCSession, didReceiveMessage message: [Swift.String : Any])
  @objc public func session(_ session: WatchConnectivity.WCSession, didReceiveApplicationContext applicationContext: [Swift.String : Any])
  @objc deinit
}
